name: Pull Data from Chicago Data Portal
on:
  workflow_dispatch:
  schedule:
    - cron: "0 17 * * *"
permissions:
  contents: write
jobs:
  download-data:
    runs-on: ubuntu-latest
    env:
      GIST_UPDATE_TOKEN: ${{ secrets.GIST_UPDATE_TOKEN }}
      SOCRATA_TOKEN: ${{ secrets.SOCRATA_TOKEN }}
      VITE_APP_JAWG_TOKEN: ${{ secrets.VITE_APP_JAWG_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global user.email "actions@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.4"

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip3 install requests sodapy

      - name: Call APIs and download any updated files
        run: python ./scripts/access_api.py

      - name: Stage files if they have updated
        run: |
          for file in data/busData.json data/stationData.json data/stationData.json data/lastModified.json; do
            if [ -f "$file" ]; then
              git add "$file"
            fi
          done
          if git diff --staged --quiet; then
            echo 'staged=false' >> $GITHUB_ENV
          else
            echo 'staged=true' >> $GITHUB_ENV
          fi

      - name: Install GDAL
        if: env.staged == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdal-dev gdal-bin
          pip3 install GDAL==3.4.1 bs4

      - name: Convert map files from KMZ to GeoJSON
        if: env.staged == 'true'
        run: python ./scripts/kmz_to_json.py

      - name: Stage map files
        if: env.staged == 'true'
        run: git add data/busMap.json data/stationMap.json

      - name: Commit and push changes
        if: env.staged == 'true'
        run: |
          git commit -m "automatically fetched update"
          git push

      - name: Set up Node.js environment
        uses: actions/setup-node@v2

      - name: Install dependencies
        run: |
          npm install
          git add package-lock.json package.json
          if ! git diff --staged --quiet; then
            git commit -m "updated"
            git push
          fi

      - name: Build
        run: npm run build

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: dist
